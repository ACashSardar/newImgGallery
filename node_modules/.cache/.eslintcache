[{"C:\\Users\\Akash\\Documents\\React JS learning\\image-gallery-website\\src\\index.js":"1","C:\\Users\\Akash\\Documents\\React JS learning\\image-gallery-website\\src\\App.js":"2"},{"size":254,"mtime":1697533572364,"results":"3","hashOfConfig":"4"},{"size":8055,"mtime":1697784436376,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"9"},"1yd6vxx",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"C:\\Users\\Akash\\Documents\\React JS learning\\image-gallery-website\\src\\index.js",[],[],["14"],"C:\\Users\\Akash\\Documents\\React JS learning\\image-gallery-website\\src\\App.js",["15","16","17","18","19","20"],[],"import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"nature\");\n  const [images, setImages] = useState([]);\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [low, setLow] = useState(0);\n  const [high, setHigh] = useState(7);\n  const [selected, setSelected] = useState(\"\");\n  const [showVideos, setShowVideos] = useState(false);\n\n  const getImages = async () => {\n    await axios\n      .get(\n        `https://api.pexels.com/v1/search?query=${query}&orientation=landscape&size=medium`,\n        {\n          headers: {\n            Authorization: `jUeC6EnmP3bSLZVPFuLzitXzS0kH0aT46zTSrrxT4bSKcG41TDJ4mMMG`,\n          },\n        }\n      )\n      .then((res) => {\n        setLoading(false);\n        return setImages(res.data.photos);\n      });\n  };\n\n  const getVideos = async () => {\n    await axios\n      .get(`https://api.pexels.com/videos/search?query=${query}`, {\n        headers: {\n          Authorization: `jUeC6EnmP3bSLZVPFuLzitXzS0kH0aT46zTSrrxT4bSKcG41TDJ4mMMG`,\n        },\n      })\n      .then((res) => {\n        setLoading(false);\n        console.log(res.data.videos);\n        return setVideos(res.data.videos);\n      });\n  };\n\n  const handleSearch = () => {\n    setLoading(true);\n    getVideos();\n    getImages();\n  };\n\n  const handlePrev = () => {\n    if (low < 8) return;\n    setLow((e) => e - 8);\n    setHigh((e) => e - 8);\n  };\n\n  const handleNext = () => {\n    if (high >= images.length) return;\n    setLow((e) => e + 8);\n    setHigh((e) => e + 8);\n  };\n\n  const toggleContent = () => {\n    setShowVideos((e) => !e);\n  };\n\n  function download(url, name) {\n    saveAs(url, name);\n  }\n\n  useEffect(() => {\n    getVideos();\n    getImages();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <nav\n        className=\"row p-2 mb-5 border-bottom bg-light fixed-top\"\n        style={{ background: \"white\" }}\n      >\n        <div className=\"col-md-7 d-flex justify-content-between\">\n          <img\n            src=\"https://asset.brandfetch.io/idUIh6k_cy/idQgJhGfSi.png\"\n            style={{ height: \"40px\" }}\n          />\n          {showVideos ? (\n            <span>\n              <button\n                className=\"btn btn-light rounded-0 px-4 py-2\"\n                onClick={() => toggleContent()}\n              >\n                Images\n              </button>\n              <button className=\"btn btn-dark rounded-0 px-4 py-2\">\n                Videos\n              </button>\n            </span>\n          ) : (\n            <span>\n              <button className=\"btn btn-dark rounded-0 px-4 py-2\">\n                Images\n              </button>\n              <button\n                className=\"btn btn-light rounded-0 px-4 py-2\"\n                onClick={() => toggleContent()}\n              >\n                Videos\n              </button>\n            </span>\n          )}\n        </div>\n        <div className=\"col-md-5 d-flex searchbar\">\n          <input\n            placeholder=\"Search for free photos\"\n            className=\"form-control rounded-0 me-0\"\n            onChange={(e) =>\n              setQuery(e.target.value ? e.target.value : \"nature\")\n            }\n            type=\"search\"\n          />\n          <button className=\"custom-btn px-4\" onClick={() => handleSearch()}>\n            Search\n          </button>\n        </div>\n      </nav>\n\n      <div\n        class=\"modal fade\"\n        id=\"exampleModal\"\n        tabindex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered \">\n          <div class=\"modal-content rounded-0\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\"></h5>\n              <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            {showVideos ? (\n              <video\n                src={selected}\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                }}\n                className=\"rounded-0\"\n                controls\n              />\n            ) : (\n              <div class=\"modal-body p-1\">\n                <img src={selected} style={{ width: \"100%\" }} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <main>\n        {loading ? (\n          <div>\n            <h3>Loading...</h3>\n            <div className=\"spinner-border text-success\" role=\"status\">\n              <span className=\"sr-only\"></span>\n            </div>\n          </div>\n        ) : (\n          <>\n            {showVideos ? (\n              <div className=\"row m-0\">\n                {videos\n                  .filter((_, index) => index >= low && index <= high)\n                  .map((video, index) => (\n                    <div className=\"container col-sm-6 col-md-3 p-1\">\n                      <img\n                        src={video.image}\n                        style={{\n                          width: \"100%\",\n                          height: \"16rem\",\n                        }}\n                        className=\"rounded-0\"\n                      />\n                      <div className=\"play-btn-container\">\n                        <i\n                          className=\"fa fa-play play-btn-icon\"\n                          data-bs-toggle=\"modal\"\n                          data-bs-target=\"#exampleModal\"\n                          onClick={() => setSelected(video.video_files[1].link)}\n                        ></i>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            ) : (\n              <div className=\"row m-0\">\n                {images\n                  .filter((_, index) => index >= low && index <= high)\n                  .map((image, index) => (\n                    <div className=\"container col-sm-6 col-md-3 p-1\">\n                      <img\n                        src={image.src.large}\n                        style={{\n                          width: \"100%\",\n                          height: \"16rem\",\n                        }}\n                        className=\"rounded-0\"\n                      />\n                      <div className=\"overlay\">\n                        <p className=\"fs-5\">\n                          {image.alt.substring(\n                            0,\n                            Math.min(70, image.alt.length)\n                          )}\n                        </p>\n                        <p>by {image.photographer}</p>\n                        <button\n                          type=\"button\"\n                          class=\"custom-btn px-3 py-2 me-1\"\n                          data-bs-toggle=\"modal\"\n                          data-bs-target=\"#exampleModal\"\n                          onClick={() => setSelected(image.src.large)}\n                        >\n                          View <i className=\"fa fa-eye\"></i>\n                        </button>\n                        <button\n                          className=\"custom-btn py-2 px-3\"\n                          onClick={() => download(image.src.large2x, image.alt)}\n                        >\n                          Download <i className=\"fa fa-download\"></i>\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            )}\n          </>\n        )}\n        <div className=\"mt-1\">\n          <button\n            className=\"custom-btn py-2 px-4 me-2\"\n            onClick={() => handlePrev()}\n          >\n            &lt;&lt; Prev\n          </button>\n          <button className=\"custom-btn py-2 px-4\" onClick={() => handleNext()}>\n            Next &gt;&gt;\n          </button>\n        </div>\n      </main>\n\n      <footer className=\"p-3 text-center\">\n        Copywright Â© Akash Sardar, 2023\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":75,"column":6,"nodeType":"25","endLine":75,"endColumn":8,"suggestions":"26"},{"ruleId":"27","severity":1,"message":"28","line":84,"column":11,"nodeType":"29","endLine":87,"endColumn":13},{"ruleId":"30","severity":1,"message":"31","line":139,"column":15,"nodeType":"29","endLine":139,"endColumn":62},{"ruleId":"27","severity":1,"message":"28","line":159,"column":17,"nodeType":"29","endLine":159,"endColumn":65},{"ruleId":"27","severity":1,"message":"28","line":182,"column":23,"nodeType":"29","endLine":189,"endColumn":25},{"ruleId":"27","severity":1,"message":"28","line":207,"column":23,"nodeType":"29","endLine":214,"endColumn":25},"no-new-object",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getImages' and 'getVideos'. Either include them or remove the dependency array.","ArrayExpression",["33"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-object-constructor",{"desc":"34","fix":"35"},"Update the dependencies array to be: [getImages, getVideos]",{"range":"36","text":"37"},[1835,1837],"[getImages, getVideos]"]